Authentication:
  -Make more strict criteria for entering password
  -Email confirmation for newly registered users

Sidebar Menu:
  -Finish the other styles
  -style the active link to know which is the active sidebar

Workstation
  -Carousel
    -Make a setting to allow them how long it takes to cycle each time
  =Allow choosing of a task that allows them to focus on the moment
  -Make option to choose how long must be worked before marking as done once (for counts)

  -Make option to only display tasks, or see all milestones

Milestones:
  -Delete confirmation popup
  -Style Tasks and Milestones
  -Refactor Milestone Item to be more clean
  -Refactor milestone controller to be more clean
  -Make a parent milestone from existing milestone (bottom up building)


Convictions:
  Make a default where there are no convictions to display a button that will allow it to be shown

Testing Framework:
  -Set it up and get it working
  -

Stats:
  -Use a graphing tool to display charts


Other:
  -Make sure they are above 13 before they can use the app
  -Make isomorphic with BrowserHistory
  -Make client side refresh when not active for a while, such as signing out
  -How to handle case when user disables cookies
  -Begin Brainstorming responsive web design
  -Implement custom popups for confirmations
  -Handle errors in all locations
  -use async for the controllers that have nested callbacks
  -Use captcha
  -Make website responsive
  -Add setting to set the time zone


Current Tasks:
  -Make a date selector to select the different date range
  -Deploy to production
  -Implement unit and integration testing
  -Milestone completion rewards

Finished Tasks:
  -Get SASS working with webpack
  -Get rid of required firstName and last Name
  -Style the register form
  -Customize modal to look the way I want it to look
  -Refactor modal code to be more streamlined
  -Refactor CSS code to SASS
  -Lead to the convictions page where it displays the list and allows the user to see the convictions
  -Build sidebar menu to be displayed when the user is logged in
  -Sketch: Style the Convictions to look more streamlined
  -Have a link for convictions
  -Make the modal for the conviction
    -for editing
    -for adding
  -Sketch: style conviction modal
  -Code: style conviction modal
  -When deleting conviction, need to have a confirmation to make sure they want to delete it
  -Code: Implement basic style for conviction
  -Create close button in top right corner
  -Make so that any not logged in route goes back to the index route
  -set up sending email
  -Confirm Password
    -Figure out frontend responding to the different things
    -Check for valid token when mounted
  -Forgot username
  -refactor modal state to redux flow
  -Style the checkboxes for forgot user name and password
  -Style Resend button
  -Go to index and open login form modal
  -Forgot password
    -Comment back in the mailing
  -Make spinning icon for loading the different pages
  -Incorrect informtion handling (password, username)
    -Right now, an alert pops up and closes the modal, when there should be a better error
  -Style the login error messages
  -Fix the different errors for registration
  -Have a link for the work station
    -Have a carousel that displays the convictions one at a time
  -Make carousel circle component
  -Make interval to cycle through the different convictions
  -Add transition between each conviction
  -Change the font style and size for the convictions
  -Sketch: Design the milestones page
  -How do you do joins and multiple queries with mongoose and mongoDB?
  -Need to learn this for the finding sub milestones and their related task
  -Next, add the buttons to create sub-milestones (come up with a better term for this)
  -For each milestone, build a general task button, that allows them to work on the item without having specific task items
  - Work on expanded to send to server each time it expands
  - Work on expanding reading from the properties
  - Fetch all milestones again
  - Creation of Milestones
  - deletions of milestones
  -modification of Milestone
  -Create Default Tasks for each milestone when it is created.
  -Create new tasks
  -Delete Tasks
  -Modify Tasks
  -Sketch: Figure out the UI for milestones
  -Update the milestone to accept an amount of hours time
  -Update submilestone form to accept the time and count
  -Refactor UI into a modal for creating new Milestones
  -Build the dropdown of tasks for active timer;
  -Click a play button to start the time
  -Create pause and stop button
  -Brainstorm how to record the time
  -Implement pinging to see if there is an active task that's already started
  -Implement stop button
  -Implement pause button
  -Implement resume button
  -implement reflecting the time in the milestones
  -Make the 3 dots dropdown menu
  -Display task activities on workstation page
  -Add start and end time to task activity
  -Display task activities on stats page

Postponed Tasks
  -Google Login - Get this working - Need privacy policy once deployed, so want to avoid this for now
